@model X.PagedList.IPagedList<MonitoringTemograficApplication.Models.Measurements>
@{
  ViewData["Title"] = "MeasuremntMissing";
  var pesquisa = Context.Request.Query["pesquisa"];
}


<h1 style="text-align:center; ">Dados Faltantes</h1>

<br />
<br />
<!--
    Formulário
    -- QueryString: Colaborador/Cliente/Index?pesquisa={palavraDigitada}&pagina=3
-->
@*<form method="get">
      <div class="form-group">
          <label for="pesquisa"></label>
          <input type="text" name="pesquisa" id="pesquisa" value="@pesquisa" class="form-control" placeholder="Digite o nome do produto">
      </div>
      <button type="submit" class="btn btn-primary">OK</button>
  </form>
  <br />
  <br />*@

@if (TempData["MSG_S"] != null)
{
  <p class="alert alert-success">@TempData["MSG_S"]</p>
}

@*<div style=" justify-content:flex-end;  display:flex;">
  <a asp-action="Register" class="btn btn-outline-success text-right">Nova Alteração</a>

</div>*@
<br />
@if (Model.Count > 0)
{
  <div class="table-responsivez" id="DivTb">
    <table class="table  table-bordered" id="Cptabela">
      <thead>
        <tr>
          <th scope="col">ID das Imagens</th>
          <th scope="col">Data</th>
          @* <th scope="col">Número da Panela</th>
        <th scope="col">Vida Panela</th>
        <th scope="col">Número da Corrida</th>*@
          <th></th>
        </tr>
      </thead>
      <tbody>
        @foreach (Measurements measurements in Model)
        {
          <tr>
            <td>@measurements.MeasurementKey.ToString()</td>
            <td>@measurements.Time.ToString()</td>
            @*<td>@measurements.LadleID.ToString()</td>
        <td>@measurements.LadleAge.ToString()</td>
        <td>
        @measurements.RaceNumber.ToString()

        </td>*@
            <td>
              <button class="btn btn-sm btn-outline-info" onclick="GetMeasurement(@measurements.MeasurementKey)">Atualizar</button>

            </td>
            @*<td>
        <a asp-action="Atualizar" asp-route-id="@produto.Id" class="btn btn-secondary">Atualizar</a>
        <a asp-action="Excluir" asp-route-id="@produto.Id" class="btn btn-danger">Excluir</a>
        </td>*@
          </tr>
        }
      </tbody>
    </table>
    <div id="DivBtn">
      @Html.PagedListPager((IPagedList)Model, page => Url.Action("MeasurementMissing", new { page = page, search = pesquisa }), new PagedListRenderOptions
    {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "btn btn-outline-success text-right"}
    })
    </div>

  </div>



}
else
{
  <div class="table-responsive">
    <table class="table table-bordered">
      <thead>
        <tr>
          <th scope="col">ID das Imagens</th>
          <th scope="col">Data</th>
          <th></th>



        </tr>
      </thead>
    </table>
    <div>
      Nenhum registro cadastrado!
    </div>
  </div>

}

<div id="modal" class="modal fade" role="dialog">

  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h6 class="modal-title"></h6>
      </div>

      <div class="modal-body">
        <input type="hidden" class="form-control form-control-sm MeasurementKey" />
        <input type="hidden" class="form-control form-control-sm Time" />
        

        <div class="form-group">
          <label>Numero da Panela</label>
          <input type="text" class="form-control form-control-sm ladleID" />
          <span class="text-danger erroladleID d-none"></span>
        </div>

        <div class="form-group">
          <label>Vida da Panela</label>
          <input type="number" class="form-control form-control-sm ladleAge" />
          <span class="text-danger erroladleAge d-none">Digite a vida da panela</span>
        </div>

        <div class="form-group">
          <label>Número da Corrida</label>
          <input type="text" class="form-control form-control-sm raceNumber" />
          <span class="text-danger erroraceNumber d-none">Digite o número da corrida</span>
        </div>
      </div>

      <div class="modal-footer">
        <div class="form-group">
          <input type="button" value="Salvar" class="btn btn-sm btn-outline-success btnSalvar" />
          <input type="button" value="Cancelar" class="btn btn-sm btn-light btnCancelar" data-bs-dismiss="modal" />
        </div>
      </div>
    </div>
  </div>

</div>

@section scripts {

  <script>
    function GetMeasurement(id) {
        $.ajax({
            url: "EditMeasurementExist",
            method: 'GET',
            data: {
                id: id
            },
            success: function (measurement) {
                console.log(measurement);
                mostrarModal();
                escolherTituloModal('Atualizar');
                $(".MeasurementKey").val(measurement.measurementKey);
                $(".Time").val(measurement.time);
                //$(".Location").val(measurement.location);
                //$(".ladleID").val(measurement.ladleID);
                //$(".ladleAge").val(measurement.ladleAge);
                //$(".raceNumber").val(measurement.raceNumber);
            }
        })
    }
    $(".btnCancelar").click(function () {
        location.reload(true)
    });
    $(".btnSalvar").click(function () {
        var measurement = {
            MeasurementKey: $('.MeasurementKey').val(),
            LadleID: $('.ladleID').val(),
            LadleAge: $('.ladleAge').val(),
            RaceNumber: $('.raceNumber').val(),
            Location: $('.Location').val(),
            Time: $('.Time').val()
        };
        console.log(measurement)
        if (validarFormulario(measurement)) {

            updateMeasurement(measurement);

        }
    });
    
    function validarFormulario(measurement, mesasurementValidate) {
        let numeroPanelaValido = validarNumeroPanela(measurement.LadleID);
        let vidaPanelaValida = validarVidaPanela(measurement.LadleAge);
        let raceNumberValida = validarRaceNumber(measurement.RaceNumber);
        if (numeroPanelaValido == true && raceNumberValida == true && vidaPanelaValida == true)
            return true;
        return false;
    }
    function validarNumeroPanela(numeroPanela) {
        let numeroPanelaValida = true;

        if (isNaN(numeroPanela) || numeroPanela == undefined || numeroPanela == '') {
            $(".ladleID").addClass('is-invalid');
            $(".erroladleID").text("Preencha o número da panela ");
            $(".erroladleID").removeClass("d-none");
            numeroPanelaValida = false;
        }
        else {
            $(".ladleID").removeClass('is-invalid');
            $(".erroladleID").addClass('is-valid');
            $(".erroladleID").addClass("d-none");
            numeroPanelaValida = true;
        }
        return numeroPanelaValida
    }
    function validarVidaPanela(vidaPanela) {
        let vidaPanelaValida = true;

        if (isNaN(vidaPanela) || vidaPanela == undefined || vidaPanela == '') {
            $(".ladleAge").addClass('is-invalid');
            $(".erroladleAge").text("Preencha a idade da panela ");
            $(".erroladleAge").removeClass("d-none");
            vidaPanelaValida = false;
        }
        else {
            $(".ladleAge").removeClass('is-invalid');
            $(".erroladleAge").addClass('is-valid');
            $(".erroladleAge").addClass("d-none");
            vidaPanelaValida = true;
        }
        return vidaPanelaValida
    }
    function validarRaceNumber(numeroCorrida) {
        let corridaValida = true;

        if (numeroCorrida.trim() == '' || numeroCorrida == undefined) {
            $(".raceNumber").addClass('is-invalid');
            $(".erroraceNumber").text("Preencha o número da panela ");
            $(".erroraceNumber").removeClass("d-none");
            corridaValida = false;
        }
        else {
            $(".raceNumber").removeClass('is-invalid');
            $(".erroraceNumber").addClass('is-valid');
            $(".erroraceNumber").addClass("d-none");
            corridaValida = true;
        }

        return corridaValida
    }
    function updateMeasurement(measurement) {
        $.ajax({
            url: "Edit",
            method: 'PUT',
            data: {
                measurement: measurement
            },
            success: function (measurementUptaded) {
                $("#modal").modal('hide');
                location.reload(true)

            }
        });
    }



    

    function mostrarModal() {
        console.log('chegou aqui')
        new bootstrap.Modal($("#modal"), {}).show();
    }

    function escolherTituloModal(texto) {
        $(".modal-title").text(texto);
    }
  </script>







}